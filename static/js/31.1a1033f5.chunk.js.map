{"version":3,"sources":["pages/shop/category.js"],"names":["connect","state","products","productData","location","useState","layout","sortType","setSortType","sortValue","setSortValue","filterSortType","filterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","pathname","useEffect","getSortedProducts","filterSortedProducts","slice","name","content","headerTop","className","getSortParams","sideSpaceClass","totalRecords","length","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"mappings":"kQAgHeA,6BANS,SAAAC,GACpB,MAAM,CACFC,SAAUD,EAAME,YAAYD,YAIrBF,EAnGE,SAAC,GAA0B,IAAzBI,EAAwB,EAAxBA,SAAUF,EAAc,EAAdA,SAAc,EACXG,qBADW,mBAChCC,EADgC,aAEPD,mBAAS,KAFF,mBAEhCE,EAFgC,KAEtBC,EAFsB,OAGLH,mBAAS,IAHJ,mBAGhCI,EAHgC,KAGrBC,EAHqB,OAIKL,mBAAS,IAJd,mBAIhCM,EAJgC,aAKON,mBAAS,KALhB,mBAKhCO,EALgC,aAMXP,mBAAS,IANE,mBAMhCQ,EANgC,KAMxBC,EANwB,OAODT,mBAAS,GAPR,mBAOhCU,EAPgC,KAOnBC,EAPmB,OAQDX,mBAAS,IARR,mBAQhCY,EARgC,KAQnBC,EARmB,OASKb,mBAAS,IATd,mBAShCc,EATgC,KAShBC,EATgB,KAYpBhB,EAAZiB,SAwBP,OARAC,qBAAU,WACN,IAAIH,EAAiBI,YAAkBrB,EAAUK,EAAUE,GACrDe,EAAuBD,YAAkBJ,EAAgBR,EAAgBC,GAE/EQ,EADAD,EAAiBK,GAEjBN,EAAeC,EAAeM,MAAMZ,EAAQA,EAtB9B,OAuBf,CAACA,EAAQX,EAAUK,EAAUE,EAAWE,EAAgBC,IAGvD,kBAAC,WAAD,KACI,kBAAC,IAAD,KACI,6CACA,0BAAMc,KAAK,cAAcC,QAAQ,6DAMrC,kBAAC,IAAD,CAAaC,UAAU,WAInB,yBAAKC,UAAU,yBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+BAEX,kBAAC,IAAD,CAAa3B,SAAUA,EAAU4B,cArCvC,SAACvB,EAAUE,GAC7BD,EAAYD,GACZG,EAAaD,IAmC0EsB,eAAe,WAElF,yBAAKF,UAAU,+BAMX,kBAAC,IAAD,CAAcvB,OAAQA,EAAQJ,SAAUe,IAGxC,yBAAKY,UAAU,0CACX,kBAAC,IAAD,CACIG,aAAcb,EAAec,OAC7BC,UA1DlB,GA2DkBC,eAAgB,EAChBrB,UAAWA,EACXC,YAAaA,EACbC,eAAgBA,EAChBoB,mBAAmB,YACnBC,aAAa,OACbC,aAAa","file":"static/js/31.1a1033f5.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaTags from 'react-meta-tags';\nimport Paginator from 'react-hooks-paginator';\nimport { BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\nimport { connect } from 'react-redux';\nimport { getSortedProducts } from '../../helpers/product';\nimport LayoutThree from '../../layouts/LayoutThree';\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\nimport ShopSidebar from '../../wrappers/product/ShopSidebar';\nimport ShopTopbar from '../../wrappers/product/ShopTopbar';\nimport ShopProducts from '../../wrappers/product/ShopProducts';\n\nconst Category = ({location, products}) => {\n    const [layout, setLayout] = useState();\n    const [sortType, setSortType] = useState('');\n    const [sortValue, setSortValue] = useState('');\n    const [filterSortType, setFilterSortType] = useState('');\n    const [filterSortValue, setFilterSortValue] = useState('');\n    const [offset, setOffset] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [currentData, setCurrentData] = useState([]);\n    const [sortedProducts, setSortedProducts] = useState([]);\n\n    const pageLimit = 15;\n    const {pathname} = location;\n\n    const getLayout = (layout) => {\n        setLayout(layout)\n    }\n\n    const getSortParams = (sortType, sortValue) => {\n        setSortType(sortType);\n        setSortValue(sortValue);\n    }\n\n    const getFilterSortParams = (sortType, sortValue) => {\n        setFilterSortType(sortType);\n        setFilterSortValue(sortValue);\n    }\n\n    useEffect(() => {\n        let sortedProducts = getSortedProducts(products, sortType, sortValue);\n        const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\n        sortedProducts = filterSortedProducts;\n        setSortedProducts(sortedProducts);\n        setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\n    }, [offset, products, sortType, sortValue, filterSortType, filterSortValue ]);\n\n    return (\n        <Fragment>\n            <MetaTags>\n                <title>impetrosys</title>\n                <meta name=\"description\" content=\"Shop page of flone react minimalist eCommerce template.\" />\n            </MetaTags>\n{/* \n            <BreadcrumbsItem to={process.env.PUBLIC_URL + '/'}>Home</BreadcrumbsItem>\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>Shop</BreadcrumbsItem> */}\n\n            <LayoutThree headerTop=\"visible\">\n                {/* breadcrumb */}\n                {/* <Breadcrumb /> */}\n\n                <div className=\"shop-area pt-20 pb-50\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-3 order-2 order-lg-1\">\n                                {/* shop sidebar */}\n                                <ShopSidebar products={products} getSortParams={getSortParams} sideSpaceClass=\"mr-30\"/>\n                            </div>\n                            <div className=\"col-lg-9 order-1 order-lg-2\">\n                                {/* shop topbar default */}\n                                {/* <ShopTopbar getLayout={getLayout} getFilterSortParams={getFilterSortParams} \n                                productCount={products.length} sortedProductCount={currentData.length} /> */}\n\n                                {/* shop page content default */}\n                                <ShopProducts layout={layout} products={currentData} />\n\n                                {/* shop product pagination */}\n                                <div className=\"pro-pagination-style text-center mt-30\">\n                                    <Paginator\n                                        totalRecords={sortedProducts.length}\n                                        pageLimit={pageLimit}\n                                        pageNeighbours={2}\n                                        setOffset={setOffset}\n                                        currentPage={currentPage}\n                                        setCurrentPage={setCurrentPage}\n                                        pageContainerClass=\"mb-0 mt-0\"\n                                        pagePrevText=\"«\"\n                                        pageNextText=\"»\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </LayoutThree>\n        </Fragment>\n    )\n}\n\nCategory.propTypes = {\n  location: PropTypes.object,\n  products: PropTypes.array\n}\n\nconst mapStateToProps = state => {\n    return{\n        products: state.productData.products\n    }\n}\n\nexport default connect(mapStateToProps)(Category);"],"sourceRoot":""}