{"version":3,"sources":["pages/shop/Shop.js"],"names":["connect","state","products","productData","location","useState","layout","sortType","setSortType","sortValue","setSortValue","filterSortType","filterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","pathname","useEffect","getSortedProducts","filterSortedProducts","slice","name","content","headerTop","className","getSortParams","sideSpaceClass","totalRecords","length","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"mappings":"kQA2HeA,6BANS,SAAAC,GACpB,MAAM,CACFC,SAAUD,EAAME,YAAYD,YAIrBF,EA9GF,SAAC,GAA0B,IAAzBI,EAAwB,EAAxBA,SAAUF,EAAc,EAAdA,SAAc,EACPG,qBADO,mBAC5BC,EAD4B,aAEHD,mBAAS,KAFN,mBAE5BE,EAF4B,KAElBC,EAFkB,OAGDH,mBAAS,IAHR,mBAG5BI,EAH4B,KAGjBC,EAHiB,OAISL,mBAAS,IAJlB,mBAI5BM,EAJ4B,aAKWN,mBAAS,KALpB,mBAK5BO,EAL4B,aAMPP,mBAAS,IANF,mBAM5BQ,EAN4B,KAMpBC,EANoB,OAOGT,mBAAS,GAPZ,mBAO5BU,EAP4B,KAOfC,EAPe,OAQGX,mBAAS,IARZ,mBAQ5BY,EAR4B,KAQfC,EARe,OASSb,mBAAS,IATlB,mBAS5Bc,EAT4B,KASZC,EATY,KAYhBhB,EAAZiB,SAwBP,OARAC,qBAAU,WACN,IAAIH,EAAiBI,YAAkBrB,EAAUK,EAAUE,GACrDe,EAAuBD,YAAkBJ,EAAgBR,EAAgBC,GAE/EQ,EADAD,EAAiBK,GAEjBN,EAAeC,EAAeM,MAAMZ,EAAQA,EAtB9B,OAuBf,CAACA,EAAQX,EAAUK,EAAUE,EAAWE,EAAgBC,IAGvD,kBAAC,WAAD,KACI,kBAAC,IAAD,KACI,6CACA,0BAAMc,KAAK,cAAcC,QAAQ,UAMrC,kBAAC,IAAD,CAAaC,UAAU,WAGnB,yBAAKC,UAAU,oBACrB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACf,yBAAKA,UAAU,cACb,yCAOA,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+BAEX,kBAAC,IAAD,CAAa3B,SAAUA,EAAU4B,cAhDvC,SAACvB,EAAUE,GAC7BD,EAAYD,GACZG,EAAaD,IA8C0EsB,eAAe,WAElF,yBAAKF,UAAU,+BAMX,kBAAC,IAAD,CAAcvB,OAAQA,EAAQJ,SAAUe,IAGxC,yBAAKY,UAAU,0CACX,kBAAC,IAAD,CACIG,aAAcb,EAAec,OAC7BC,UArElB,GAsEkBC,eAAgB,EAChBrB,UAAWA,EACXC,YAAaA,EACbC,eAAgBA,EAChBoB,mBAAmB,YACnBC,aAAa,OACbC,aAAa","file":"static/js/30.d73f34f6.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport Paginator from 'react-hooks-paginator';\r\nimport { BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\r\nimport { connect } from 'react-redux';\r\nimport { getSortedProducts } from '../../helpers/product';\r\nimport LayoutThree from '../../layouts/LayoutThree';\r\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\r\nimport ShopSidebar from '../../wrappers/product/ShopSidebar';\r\nimport ShopTopbar from '../../wrappers/product/ShopTopbar';\r\nimport ShopProducts from '../../wrappers/product/ShopProducts';\r\n\r\nconst Shop = ({location, products}) => {\r\n    const [layout, setLayout] = useState();\r\n    const [sortType, setSortType] = useState('');\r\n    const [sortValue, setSortValue] = useState('');\r\n    const [filterSortType, setFilterSortType] = useState('');\r\n    const [filterSortValue, setFilterSortValue] = useState('');\r\n    const [offset, setOffset] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentData, setCurrentData] = useState([]);\r\n    const [sortedProducts, setSortedProducts] = useState([]);\r\n\r\n    const pageLimit = 15;\r\n    const {pathname} = location;\r\n\r\n    const getLayout = (layout) => {\r\n        setLayout(layout)\r\n    }\r\n\r\n    const getSortParams = (sortType, sortValue) => {\r\n        setSortType(sortType);\r\n        setSortValue(sortValue);\r\n    }\r\n\r\n    const getFilterSortParams = (sortType, sortValue) => {\r\n        setFilterSortType(sortType);\r\n        setFilterSortValue(sortValue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n        const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\r\n        sortedProducts = filterSortedProducts;\r\n        setSortedProducts(sortedProducts);\r\n        setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n    }, [offset, products, sortType, sortValue, filterSortType, filterSortValue ]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaTags>\r\n                <title>impetrosys</title>\r\n                <meta name=\"description\" content=\"Shop\" />\r\n            </MetaTags>\r\n{/* \r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + '/'}>Home</BreadcrumbsItem>\r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>Shop</BreadcrumbsItem> */}\r\n\r\n            <LayoutThree headerTop=\"visible\">\r\n                {/* breadcrumb */}\r\n                {/* <Breadcrumb /> */}\r\n                <div className=\"contact-area-new\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n              <div className=\"custom-new\">\r\n                <h4>Shop</h4>\r\n                </div>\r\n\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"shop-area pt-20 pb-50\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                                {/* shop sidebar */}\r\n                                <ShopSidebar products={products} getSortParams={getSortParams} sideSpaceClass=\"mr-30\"/>\r\n                            </div>\r\n                            <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                                {/* shop topbar default */}\r\n                                {/* <ShopTopbar getLayout={getLayout} getFilterSortParams={getFilterSortParams} \r\n                                productCount={products.length} sortedProductCount={currentData.length} /> */}\r\n\r\n                                {/* shop page content default */}\r\n                                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                                {/* shop product pagination */}\r\n                                <div className=\"pro-pagination-style text-center mt-30\">\r\n                                    <Paginator\r\n                                        totalRecords={sortedProducts.length}\r\n                                        pageLimit={pageLimit}\r\n                                        pageNeighbours={2}\r\n                                        setOffset={setOffset}\r\n                                        currentPage={currentPage}\r\n                                        setCurrentPage={setCurrentPage}\r\n                                        pageContainerClass=\"mb-0 mt-0\"\r\n                                        pagePrevText=\"«\"\r\n                                        pageNextText=\"»\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </LayoutThree>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nShop.propTypes = {\r\n  location: PropTypes.object,\r\n  products: PropTypes.array\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        products: state.productData.products\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Shop);"],"sourceRoot":""}